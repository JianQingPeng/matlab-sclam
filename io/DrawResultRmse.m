function DrawResultRmse( cell_results, vec_errodo, vec_errmk, ...    options)%DRAWRESULTCURVE Draw curvesif nargin < 4    options.b_drawodo = true;    options.b_drawimg = true;    options.stdratio_odo = 0;    options.std_img = 0;    options.algorithms = {'initvo'; 'initmk'};    options.property = 'norm_tvec';    options.outputfilename = '.\temp\test';end[num_errodo, num_errmk, ~] = size(cell_results);num_algorithm = numel(options.algorithms);switch options.property    case 'norm_tvec'        str_title_property = 'Trans. Err.';        str_ylable = 'Trans. Rmse. (mm)';    case 'norm_rvec'        str_title_property = 'Rot. Err.';        str_ylable = 'Rot. Rmse. (rad)';    case 'dt_b_c'        str_title_property = 'Temp. Delay';        str_ylable = 'Temp. Rmse. (ms)';    case 'k_odo_lin'        str_title_property = 'Odo. Lin.';        str_ylable = 'Odo. Lin. Rmse.';    case 'k_odo_rot'        str_title_property = 'Odo. Rot.';        str_ylable = 'Odo. Rot. Rmse.';    case 'beta_l'        str_title_property = 'Odo. BetaL.';        str_ylable = 'Odo. BetaL';    case 'beta_r'        str_title_property = 'Odo. BetaR.';        str_ylable = 'Odo. BetaR';    case 'base_len'        str_title_property = 'Odo. BaseLen.';        str_ylable = 'Odo. Base Length';end[~,~,num_set] = size(cell_results);%% draw curve with x = odoerrratioif options.b_drawodo        figure; grid on; hold on;    str_xlabel = 'Odo. Std. Err. Ratio';    str_title = [str_title_property, ' with Std. Img. Err. = ', num2str(options.std_img)];    title(str_title, 'FontWeight','bold');    xlabel(str_xlabel);    ylabel(str_ylable);        idx_errmk = find(vec_errmk == options.std_img, 1);    if isempty(idx_errmk)        error('Error in DrawResultCurve!');    end        mat_data = zeros(num_errodo, num_algorithm);    for idx_algorithm = 1:num_algorithm        fieldname_algorithm = ['error_', options.algorithms{idx_algorithm}];        for idx_errodo = 1:num_errodo            vec_data_temp = [];            for idx_set = 1:num_set                error_temp = cell_results{idx_errodo, idx_errmk, idx_set}.(fieldname_algorithm);                if ~error_temp.isoutlier                    vec_data_temp = [vec_data_temp; error_temp.(options.property)];                end            end            rmse_temp = rms(vec_data_temp);            mat_data(idx_errodo, idx_algorithm) = rmse_temp;        end    end    plot(vec_errodo, mat_data, '-o');    legend(options.algorithms, 'Location', 'best');end%% draw curve with x = errstdimgif options.b_drawimg        figure; grid on; hold on;    str_xlabel = 'Image Err. Std. (pixel)';    str_title = [str_title_property, ' with Odo. Std.Err.Ratio = ', num2str(options.stdratio_odo)];    title(str_title, 'FontWeight','bold');    xlabel(str_xlabel);    ylabel(str_ylable);        idx_errodo = find(vec_errodo == options.stdratio_odo, 1);    if isempty(idx_errodo)        error('Error in DrawResultCurve!');    end        mat_data = zeros(num_errodo, num_algorithm);    for idx_algorithm = 1:num_algorithm        fieldname_algorithm = ['error_', options.algorithms{idx_algorithm}];        for idx_errmk = 1:num_errmk            vec_data_temp = [];            for idx_set = 1:num_set                error_temp = cell_results{idx_errodo, idx_errmk, idx_set}.(fieldname_algorithm);                if ~error_temp.isoutlier                    vec_data_temp = [vec_data_temp; error_temp.(options.property)];                end            end                        vec_data_temp = RemoveOutliers(vec_data_temp);                        rmse_temp = rms(vec_data_temp);            mat_data(idx_errmk, idx_algorithm) = rmse_temp;        end    end        plot(vec_errmk, mat_data, '-o');    %     bar(vec_errmk, mat_data);        legend(options.algorithms, 'Location', 'best');end%% save figureprint([options.outputfilename, '.eps'], '-depsc', '-r0');% print([options.outputfilename, '.emf'], '-dmeta', '-r0');print([options.outputfilename, '.jpg'], '-djpeg', '-r0');end