function [ mat_jacobian_bc, mat_jacobian_wb, mat_jacobian_wm, mat_jacobian_cam ] = Jacobian_Opt5Mk_Lie( ...
    rvec_b_c, tvec_b_c, rvec_w_b, tvec_w_b, rvec_w_m, tvec_w_m,...
    tvec_m_f, mat_camera, vec_distortion)
%JACOBIAN_OPT5MK compute the jacobian of each mark constraint for opt5
% return jacobian of undistored image cordinates

%% read camera intrinsics
k1 = vec_distortion(1);
k2 = vec_distortion(2);
p1 = vec_distortion(3);
p2 = vec_distortion(4);
k3 = vec_distortion(5);
fx = mat_camera(1,1);
fy = mat_camera(2,2);
cx = mat_camera(1,3);
cy = mat_camera(2,3);

%% compute tvec_c_f
[ T3d_b_c, R3d_b_c ] = FunVec2Trans3d( rvec_b_c, tvec_b_c );
[ T3d_w_b, R3d_w_b ] = FunVec2Trans3d( rvec_w_b, tvec_w_b );
[ T3d_w_m, R3d_w_m ] = FunVec2Trans3d( rvec_w_m, tvec_w_m );
T3d_c_m = inv(T3d_w_b*T3d_b_c)*T3d_w_m;
tvecbar_c_f = T3d_c_m*[tvec_m_f;1];
tvec_c_f = tvecbar_c_f(1:3);

%% J0: jacobian of image cordinate img_c_f = [u;v], to tvec_c_pt
% todo ...
x_c_f = tvec_c_f(1);
y_c_f = tvec_c_f(2);
z_c_f = tvec_c_f(3);
% J0_temp = [...
%     1/z_c_f 0 -x_c_f/(z_c_f^2);...
%     0 1/z_c_f -y_c_f/(z_c_f^2);...
%     0 0 0;
%     ];
% J0bar = mat_camera*J0_temp;
% J0 = J0bar(1:2,:);

J0 = zeros(2,3);
J0(:,1) = [ ...
    (fx*(7*k3*x_c_f^6 + 15*k3*x_c_f^4*y_c_f^2 + 5*k2*x_c_f^4*z_c_f^2 + 9*k3*x_c_f^2*y_c_f^4 + 6*k2*x_c_f^2*y_c_f^2*z_c_f^2 + 3*k1*x_c_f^2*z_c_f^4 + 6*p2*x_c_f*z_c_f^5 + k3*y_c_f^6 + k2*y_c_f^4*z_c_f^2 + k1*y_c_f^2*z_c_f^4 + 2*p1*y_c_f*z_c_f^5 + z_c_f^6))/z_c_f^7;...
    fy*((2*p1*x_c_f)/z_c_f^2 + (2*p2*y_c_f)/z_c_f^2 + (y_c_f*((2*k1*x_c_f)/z_c_f^2 + (4*k2*x_c_f*(x_c_f^2 + y_c_f^2))/z_c_f^4 + (6*k3*x_c_f*(x_c_f^2 + y_c_f^2)^2)/z_c_f^6))/z_c_f) ...
    ];
J0(:,2) = [...
    fx*((2*p1*x_c_f)/z_c_f^2 + (2*p2*y_c_f)/z_c_f^2 + (x_c_f*((2*k1*y_c_f)/z_c_f^2 + (4*k2*y_c_f*(x_c_f^2 + y_c_f^2))/z_c_f^4 + (6*k3*y_c_f*(x_c_f^2 + y_c_f^2)^2)/z_c_f^6))/z_c_f);...
    (fy*(k3*x_c_f^6 + 9*k3*x_c_f^4*y_c_f^2 + k2*x_c_f^4*z_c_f^2 + 15*k3*x_c_f^2*y_c_f^4 + 6*k2*x_c_f^2*y_c_f^2*z_c_f^2 + k1*x_c_f^2*z_c_f^4 + 2*p2*x_c_f*z_c_f^5 + 7*k3*y_c_f^6 + 5*k2*y_c_f^4*z_c_f^2 + 3*k1*y_c_f^2*z_c_f^4 + 6*p1*y_c_f*z_c_f^5 + z_c_f^6))/z_c_f^7 ...
    ];
J0(:,3) = [...
    -(fx*(7*k3*x_c_f^7 + 21*k3*x_c_f^5*y_c_f^2 + 5*k2*x_c_f^5*z_c_f^2 + 21*k3*x_c_f^3*y_c_f^4 + 10*k2*x_c_f^3*y_c_f^2*z_c_f^2 + 3*k1*x_c_f^3*z_c_f^4 + 6*p2*x_c_f^2*z_c_f^5 + 7*k3*x_c_f*y_c_f^6 + 5*k2*x_c_f*y_c_f^4*z_c_f^2 + 3*k1*x_c_f*y_c_f^2*z_c_f^4 + 4*p1*x_c_f*y_c_f*z_c_f^5 + x_c_f*z_c_f^6 + 2*p2*y_c_f^2*z_c_f^5))/z_c_f^8;...
    -(fy*(7*k3*x_c_f^6*y_c_f + 21*k3*x_c_f^4*y_c_f^3 + 5*k2*x_c_f^4*y_c_f*z_c_f^2 + 21*k3*x_c_f^2*y_c_f^5 + 10*k2*x_c_f^2*y_c_f^3*z_c_f^2 + 3*k1*x_c_f^2*y_c_f*z_c_f^4 + 2*p1*x_c_f^2*z_c_f^5 + 4*p2*x_c_f*y_c_f*z_c_f^5 + 7*k3*y_c_f^7 + 5*k2*y_c_f^5*z_c_f^2 + 3*k1*y_c_f^3*z_c_f^4 + 6*p1*y_c_f^2*z_c_f^5 + y_c_f*z_c_f^6))/z_c_f^8 ...
    ];

%% J1: jacobian of tvec_c_pt to [rvec_b_c; tvec_b_c]
tvec_temp_1 = R3d_w_b.'*(R3d_w_m*tvec_m_f+tvec_w_m-tvec_w_b) - tvec_b_c;
J1_r = -DiffRotVec2Lie( rodrigues(-rvec_b_c), tvec_temp_1 );
J1_t = -R3d_b_c.';
J1 = [J1_r J1_t];

%% J2: jacobian of tvec_c_pt to [rvec_w_b; tvec_w_b]
tvec_temp_2 = R3d_w_m*tvec_m_f+tvec_w_m-tvec_w_b;
J2_r = R3d_b_c.'*(-DiffRotVec2Lie(rodrigues(-rvec_w_b), tvec_temp_2));
J2_t = -R3d_b_c.'*R3d_w_b.';
J2 = [J2_r J2_t];

%% J3: jacobian of tvec_c_pt to [rvec_w_m; tvec_w_m]
J3_r = R3d_b_c.'*R3d_w_b.'*DiffRotVec2Lie(rodrigues(rvec_w_m), tvec_m_f);
J3_t = R3d_b_c.'*R3d_w_b.';
J3 = [J3_r J3_t];

%% J4: jacobian of img_c_f to camera intrinsics :[fx fy cx cy k1 k2 p1 p2 k3]

J4_fx = [...
    (p2*(3*x_c_f^2 + y_c_f^2))/z_c_f^2 + (x_c_f*((k2*(x_c_f^2 + y_c_f^2)^2)/z_c_f^4 + (k3*(x_c_f^2 + y_c_f^2)^3)/z_c_f^6 + (k1*(x_c_f^2 + y_c_f^2))/z_c_f^2 + 1))/z_c_f + (2*p1*x_c_f*y_c_f)/z_c_f^2;...
    0 ...
    ];
J4_fy = [...
    0;...
    (p1*(x_c_f^2 + 3*y_c_f^2))/z_c_f^2 + (y_c_f*((k2*(x_c_f^2 + y_c_f^2)^2)/z_c_f^4 + (k3*(x_c_f^2 + y_c_f^2)^3)/z_c_f^6 + (k1*(x_c_f^2 + y_c_f^2))/z_c_f^2 + 1))/z_c_f + (2*p2*x_c_f*y_c_f)/z_c_f^2 ...
    ];
J4_cx = [1;0];
J4_cy = [0;1];
J4_k1 = [...
    (fx*x_c_f*(x_c_f^2 + y_c_f^2))/z_c_f^3;...
    (fy*y_c_f*(x_c_f^2 + y_c_f^2))/z_c_f^3 ...
    ];
J4_k2 = [...
    (fx*x_c_f*(x_c_f^2 + y_c_f^2)^2)/z_c_f^5;...
    (fy*y_c_f*(x_c_f^2 + y_c_f^2)^2)/z_c_f^5 ...
    ];
J4_p1 = [...
    (2*fx*x_c_f*y_c_f)/z_c_f^2;...
    (fy*(x_c_f^2 + 3*y_c_f^2))/z_c_f^2 ...
    ];
J4_p2 = [...
    (fx*(3*x_c_f^2 + y_c_f^2))/z_c_f^2;...
    (2*fy*x_c_f*y_c_f)/z_c_f^2 ...
    ];
J4_k3 = [...
    (fx*x_c_f*(x_c_f^2 + y_c_f^2)^3)/z_c_f^7; ...
    (fy*y_c_f*(x_c_f^2 + y_c_f^2)^3)/z_c_f^7 ...
    ];
J4 = [J4_fx J4_fy J4_cx J4_cy ...
    J4_k1 J4_k2 J4_p1 J4_p2 J4_k3];

%% combine
mat_jacobian_bc = J0*[J1_r J1_t(:,1:2)];
mat_jacobian_wb = J0*[J2_t(:,1:2), J2_r(:,3)];
mat_jacobian_wm = J0*J3;
mat_jacobian_cam = J4;


end

